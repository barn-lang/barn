/* Official Barn OS library file */
/* Copyright Solindek (C) 2022 */

fun os_current_system() -> string {
	__code__("#if defined (__APPLE__)") // Apple
		return "Apple"
	__code__("#elif defined (__unix__)") // Unix
		__code__("struct utsname __buf = { 0 };")
		__code__("uname(&__buf);")
		__code__("return std::string(__buf.sysname);")
	__code__("#elif defined (_WIN32)") // Windows
		return "Windows"
	__code__("#endif")
}

fun os_file_exists(string filename) -> bool {
	__code__("#if defined (__APPLE__)")
		__code__("std::cout << \"os_file_exists(string filename) is not implemented for ios\" << std::endl;")
		__code__("return false;")
	__code__("#elif defined (__unix__)")
		__code__("struct stat __buf;")
		__code__("return (bool)(stat (filename.c_str(), &__buf) == 0);")
	__code__("#elif defined (_WIN32)")
		__code__("return (bool)(GetFileAttributesA(filename) == 0xFFFFFFFF);")
	__code__("#else")
		__code__("std::cout << \"os_file_exists(string filename) is not implemented for your system\" << std::endl;")
		__code__("return false;")
	__code__("#endif")
}

fun os_read_file(string filename) -> string {
	__code__("std::string value;")
	__code__("std::ifstream file(filename);")
	__code__("char ac;")
	__code__("if (file.is_open()) {")
		__code__("while (file) {")
			__code__("ac = file.get();")
			__code__("value.append(1, ac);")
		__code__("}")
	__code__("}")
	__code__("file.close();")
	__code__("return value;")
}

fun os_write_file(string filename, string value) -> bool {
	__code__("std::ofstream file(filename);")
	__code__("file << value;")
	__code__("file.close();")
	return true
}